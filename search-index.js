var searchIndex = JSON.parse('{\
"ledger_mob":{"doc":"Ledger MobileCoin API Library (and CLI)","t":"NNNIQDNNEIEQNNQNNNNDDDNNNNNNINNNNNNALLCLLLLLLLLLLLLLLLLLLLLLMKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLKLMKLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLDLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLMLLL","n":["Any","Apdu","Ble","Device","Device","DeviceHandle","DigestMismatch","Engine","Error","Exchange","Filters","Filters","Hid","HidInit","Info","InvalidKey","InvalidLength","InvalidState","Io","LedgerHandle","LedgerInfo","LedgerProvider","NoDevice","RequestTimeout","Ring","RingCt","RingSigner","Tcp","Transport","Transport","UnexpectedResponse","Unknown","UserDenied","UserTimeout","Utf8","account","account","account_keys","apdu","app_info","app_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","conn","connect","connect","default","device_info","drop","eq","eq","exchange","exchange","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","identity","info","init","initialize","into","into","into","into","into","into","key_image","list","list","model","request","request","request","source","subaddress_keys","to_owned","to_owned","to_owned","to_possible_value","to_string","to_string","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","value_variants","vzip","vzip","vzip","vzip","vzip","vzip","AccountHandle","account","borrow","borrow_mut","clone","clone_into","compute_key_image","from","into","to_owned","try_from","try_into","type_id","vzip","TransactionHandle","TxConfig","account_index","await_approval","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","complete","compute_key_image","compute_memo_hmac_sig","eq","fmt","from","from","into","into","key_image","memo_sign","new","num_memos","num_rings","request","request_timeout","ring_sign","set_message","set_tx_summary","sign","subaddress","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_timeout","view_subaddress","vzip","vzip"],"q":[[0,"ledger_mob"],[144,"ledger_mob::account"],[158,"ledger_mob::tx"],[200,"core::marker"],[201,"mc_core_types::account"],[202,"core::result"],[203,"core::time"],[204,"core::future::future"],[205,"alloc::boxed"],[206,"core::pin"],[207,"core::clone"],[208,"core::fmt"],[209,"core::fmt"],[210,"ledger_lib::error"],[211,"ledger_proto::error"],[212,"std::io::error"],[213,"mc_crypto_ring_signature::ring_signature::error"],[214,"tokio::time::error"],[215,"ed25519_dalek::verifying"],[216,"mc_crypto_keys::ristretto"],[217,"mc_crypto_ring_signature::ring_signature::key_image"],[218,"ledger_proto"],[219,"core::error"],[220,"core::option"],[221,"mc_core_types::account"],[222,"alloc::string"],[223,"mc_transaction_extra::unsigned_tx"],[224,"mc_transaction_core::tx"],[225,"mc_transaction_signer::types"],[226,"alloc::vec"],[227,"core::any"],[228,"mc_core_types::keys"],[229,"mc_core_types::account"],[230,"alloc::sync"],[231,"mc_crypto_ring_signature_signer::traits"],[232,"curve25519_dalek::scalar"],[233,"mc_crypto_ring_signature::ring_signature::mlsag"],[234,"mc_transaction_types::block_version"],[235,"mc_transaction_types::tx_summary"],[236,"mc_transaction_summary::data"],[237,"rand_core"],[238,"mc_crypto_ring_signature_signer::traits"]],"d":["List all devices available using supported transport","APDU error","List only BLE device","Device provides a high-level interface exchanging APDU …","Device handle for interacting with the device","MobileCoin handle for a connected ledger Device.","Mismatch in rolling transaction digest","Transaction engine error","Ledger MobileCoin API Error Type","Exchange trait provides a low-level interface for …","Device discovery filter","Connection filters","List only HID devices","HID Init Error","Device information, used for listing and connecting","Invalid key in response","Invalid length","Invalid transaction state","Ledger IO Error","Ledger device handle for interacting with LedgerProvider …","Ledger device information","Ledger provider manages device discovery and connection","No device found","Request timeout","Error signing ring","Ring CT error","Ring signer error","List only TCP devices","Transport trait provides an abstract interface for …","Ledger transport error","Unexpected APDU response","Unknown (TEMPORARY) TODO: remove once ledger_transport_tcp …","User denied operation","Timeout waiting for user","UTF8 encoding error","AccountHandle for account-based operations","Fetch a handle to a specific on-device account by …","Fetch root keys for the provided account index","Re-export <code>ledger-mob-apdu</code> for consumers","Fetch ledger application info","Fetch application information","","","","","","","","","","","","","","","","","","","","Device connection information","Connect to a device using info from a previous list …","Connect to an available device","","Fetch device information","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Execute and identity challenge and response","","Create or connect to the ledger provider instance","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Resolve a key image for a given tx_out","List available devices","List available devices using the specified filter","Device Model","Issue a request APDU, returning a reponse APDU","","Issue a request APDU to a device, encoding and decoding …","","Fetch subaddress keys for the provided account and …","","","","","","","","Sign an unsigned transaction object using the device","","","","","","","","","","","","","Transaction APIs","","","","","","","","","","","","","","Handle to a hardware wallet configured with an account …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Handle to a hardware wallet configured for transaction …","Configuration for a transaction operation","Account index for key derivation","Await on-device transaction approval","","","","","","","Signal transaction completion","Compute key image for a given subaddress and …","Compute the HMAC signature for the provided memo and …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Asynchronously compute key image for a given subaddress and","Asynchronously compute the HMAC signature for the provided …","Initialise a new transaction over the provided device","Number of memos","Number of rings","Helper for executing transactions with the device","APDU request timeout","Asynchronously execute a ring signing operation on ledger …","Set message for transaction","Load tx summary for signing operation, alternative to …","Execute ring signing operation on ledger hw","Fetch view subaddress by subaddress index, inheriting the …","","","","","","","","User interaction timeout","Asynchronously fetch a view subaddress by subaddress index,","",""],"i":[16,7,16,0,63,0,7,7,0,0,0,63,16,7,63,7,7,7,7,0,0,0,7,7,7,7,7,16,0,7,7,7,7,7,7,0,1,1,0,1,4,17,14,1,7,18,16,17,14,1,7,18,16,16,14,1,16,14,1,16,14,63,17,16,4,18,14,16,64,18,14,14,7,7,18,16,16,17,14,1,1,1,7,7,7,7,7,7,7,18,16,1,18,17,16,17,14,1,7,18,16,1,63,17,14,4,1,18,7,1,14,1,16,16,14,7,16,1,17,14,1,7,18,16,17,14,1,7,18,16,0,17,14,1,7,18,16,16,17,14,1,7,18,16,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,51,50,50,51,50,51,51,51,50,50,50,51,51,50,51,50,51,50,50,50,51,51,50,51,50,50,50,50,50,51,50,51,50,51,50,51,51,50,50,51],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],2],[[3,[-1]]],[4,5]],[[[1,[-1]],2],[[8,[6,7]]],[4,5]],0,[[[1,[-1]]],[[8,[0,7]]],[4,5]],[[-1,9],[[12,[[11,[10]]]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[14,14],[[[1,[-1]]],[[1,[-1]]],[15,4]],[16,16],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[-1,[[12,[[11,[10]]]]],[]],[[17,14],[[12,[[11,[10]]]]]],[[],16],[[-1,9],[[12,[[11,[10]]]]],5],[18,13],[[14,14],19],[[16,16],19],[[-1,[21,[20]],9],[[12,[[11,[10]]]]],[]],[[18,[21,[20]],9],[[12,[[11,[10]]]]]],[[14,22],[[8,[13,23]]]],[[14,22],[[8,[13,23]]]],[[7,22],24],[[7,22],24],[[18,22],[[8,[13,23]]]],[[16,22],[[8,[13,23]]]],[[16,22],[[8,[13,23]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,-1,[]],[-1,[[1,[-1]]],4],[-1,-1,[]],[26,7],[27,7],[28,7],[29,7],[30,7],[31,7],[-1,-1,[]],[-1,-1,[]],[[[1,[-1]],2,32,[21,[20]]],[[8,[[13,[33,[34,[20]]]],7]]],[4,5]],0,[[],17],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2,35,36],[[8,[37,7]]],[4,5]],[-1,[[12,[[11,[10]]]]],[]],[[17,16],[[12,[[11,[10]]]]]],0,[[-1,-2,[21,[20]],9],[[12,[[11,[10]]]]],[],[38,5]],[[[1,[-1]],-2,[21,[20]],9],[[12,[[11,[10]]]]],[4,5],[38,5]],[[-1,-2,[21,[20]],9],[[12,[[11,[10]]]]],[],[38,5]],[7,[[40,[39]]]],[[[1,[-1]],2,35],[[8,[41,7]]],[4,5]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[40,[42]]]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[[[1,[-1]],2,2,44],[[8,[[13,[45,[47,[46]]]],7]]],[4,5]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[[],[[21,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[3,[-1]]],[[8,[6]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],[[3,[-1]]],[15,4]],[[-1,-2],13,[],[]],[[[3,[-1]],35,49],[[8,[37]]],4],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,48,[]],[-1,-2,[],[]],0,0,0,[[[50,[-1]],2],[[8,[13,7]]],[4,5]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[[-1,-2],13,[],[]],[[[50,[-1]]],[[8,[13,7]]],[4,5]],[[[50,[-1]],35,49],[[8,[37]]],4],[[[50,[-1]],35,49,52,[34,[20]],[34,[20]]],[[8,[[34,[20]]]]],4],[[51,51],19],[[51,22],24],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[50,[-1]],35,49],[[8,[37,7]]],4],[[[50,[-1]],35,49,52,[34,[20]],[34,[20]]],[[8,[[34,[20]],7]]],4],[[51,[54,[[53,[-1]]]]],[[8,[[50,[-1]],7]]],[4,5]],0,0,[[[50,[-1]],-2,[21,[20]],9],[[12,[[11,[10]]]]],[4,5],[38,5]],0,[[[50,[-1]],[21,[20]],55,56],[[8,[57,7]]],4],[[[50,[-1]],[21,[20]]],[[8,[13,7]]],[4,5]],[[[50,[-1]],58,[21,[20]],59,60],[[8,[13,7]]],[4,5]],[[[50,[-1]],[21,[20]],55,56,61],[[8,[57,62]]],4],[[[50,[-1]],35],[],4],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,48,[]],[-1,48,[]],0,[[[50,[-1]],35],[[8,[41,7]]],4],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"DeviceHandle",0],[15,"u32"],[3,"AccountHandle",144],[8,"Device",0],[8,"Send",200],[3,"ViewAccount",201],[4,"Error",0],[4,"Result",202],[3,"Duration",203],[8,"Future",204],[3,"Box",205],[3,"Pin",206],[15,"tuple"],[3,"LedgerInfo",0],[8,"Clone",207],[4,"Filters",0],[3,"LedgerProvider",0],[3,"LedgerHandle",0],[15,"bool"],[15,"u8"],[15,"slice"],[3,"Formatter",208],[3,"Error",208],[6,"Result",208],[15,"never"],[4,"Error",209],[4,"Error",210],[4,"ApduError",211],[3,"Error",212],[4,"Error",213],[3,"Elapsed",214],[15,"str"],[3,"VerifyingKey",215],[15,"array"],[15,"u64"],[3,"RistrettoPublic",216],[3,"KeyImage",217],[8,"ApduReq",218],[8,"Error",219],[4,"Option",220],[3,"ViewSubaddress",201],[3,"PossibleValue",221],[3,"String",222],[3,"UnsignedTx",223],[3,"Tx",224],[3,"TxoSynced",225],[3,"Vec",226],[3,"TypeId",227],[6,"TxOutPublic",228],[3,"TransactionHandle",158],[3,"TxConfig",158],[3,"PublicSubaddress",201],[3,"Mutex",229],[3,"Arc",230],[3,"SignableInputRing",231],[3,"Scalar",232],[3,"RingMLSAG",233],[3,"BlockVersion",234],[3,"TxSummary",235],[3,"TxSummaryUnblindingData",236],[8,"CryptoRngCore",237],[4,"Error",231],[8,"Transport",0],[8,"Exchange",0]],"b":[[70,"impl-Display-for-LedgerInfo"],[71,"impl-Debug-for-LedgerInfo"],[72,"impl-Display-for-Error"],[73,"impl-Debug-for-Error"],[75,"impl-Display-for-Filters"],[76,"impl-Debug-for-Filters"],[83,"impl-From%3CError%3E-for-Error"],[84,"impl-From%3CError%3E-for-Error"],[85,"impl-From%3CApduError%3E-for-Error"],[86,"impl-From%3CError%3E-for-Error"],[87,"impl-From%3CError%3E-for-Error"],[88,"impl-From%3CElapsed%3E-for-Error"]]},\
"ledger_mob_apdu":{"doc":"Protocol / APDU definitions for MobileCoin app …","t":"EIISNNNNNSNNENNNNRRNNNNNNNNNNNNNNNNALLLLLLAOLLLLLLLKALLALLAAAALLLLLLALLLLADDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLMLLLFFFFFFFFFFFFDDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLLDDMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLMLLLLCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLDNNNNNNNNNNNNNNNNNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLSDDDRESSSSSSNNNNNDDDDDDDDDDDDDGGGDDDDDDDDDDDMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLLLLLLLLLLLLMMMMMLLLLMMMMMMLLLLMMMMMMMMMLLLLMMMLLLLLLLLMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLL","n":["ApduError","ApduReq","ApduStatic","CLA","GetAppInfo","GetKeyImage","GetRandom","GetSubaddressKeys","GetWalletKeys","INS","IdentGetReq","IdentSignReq","Instruction","InvalidEncoding","InvalidLength","InvalidUtf8","InvalidVersion","MOB_APDU_CLA","MOB_PROTO_VERSION","TxAddTxOut","TxComplete","TxGetInfo","TxGetKeyImage","TxGetResponse","TxInit","TxMemoSign","TxRingInit","TxSetBlinding","TxSetMessage","TxSign","TxSummaryAddTxIn","TxSummaryAddTxOut","TxSummaryAddTxOutUnblinding","TxSummaryBuild","TxSummaryInit","app_info","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","digest","encdec_bitflags","eq","fmt","fmt","fmt","from","from","from","header","ident","into","into","key_image","p1","p2","prelude","random","state","subaddress_keys","to_owned","to_string","try_from","try_from","try_into","try_into","tx","type_id","type_id","vzip","vzip","wallet_keys","AppFlags","AppInfoReq","AppInfoResp","HAS_TX_SUMMARY","UNLOCKED","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","decode","decode","decode","decode_owned","decode_owned","default","difference","empty","encode","encode","encode","encode_len","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","header","insert","intersection","intersects","into","into","into","is_all","is_empty","name","new","not","partial_cmp","proto","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","version","vzip","vzip","vzip","digest_ring_add_txout","digest_ring_init","digest_ring_set_blinding","digest_ring_sign","digest_tx_init","digest_tx_set_message","digest_tx_sign_memo","digest_tx_summary_add_input","digest_tx_summary_add_output","digest_tx_summary_add_output_unblinding","digest_tx_summary_build","digest_tx_summary_init","IdentGetReq","IdentResp","IdentSignReq","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","encode","encode","encode","encode_len","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","eq","fmt","fmt","fmt","from","from","from","header","header","identity_index","identity_uri","into","into","into","new","new","public_key","signature","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","KeyImageReq","KeyImageResp","account_index","account_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","fmt","fmt","from","from","header","into","into","key_image","new","new","subaddress_index","subaddress_index","to_owned","to_owned","try_from","try_from","try_into","try_into","txout_public_key","type_id","type_id","vzip","vzip","AddTxOutFlags","AppFlags","AppInfoReq","AppInfoResp","IdentGetReq","IdentResp","IdentSignReq","KeyImageReq","KeyImageResp","RandomReq","RandomResp","SubaddressKeyReq","SubaddressKeyResp","TxAddTxOut","TxComplete","TxGetKeyImage","TxGetResponse","TxInfo","TxInfoReq","TxInit","TxKeyImage","TxMemoSign","TxPrivateKey","TxRingInit","TxRingSign","TxSetBlinding","TxSetMessage","TxSummaryAddTxIn","TxSummaryAddTxOut","TxSummaryAddTxOutUnblinding","TxSummaryBuild","TxSummaryInit","WalletKeyReq","WalletKeyResp","RandomReq","RandomResp","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","fmt","fmt","from","from","header","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Digest","Error","IdentApproved","IdentDenied","IdentPending","Init","Pending","Ready","RingBuild","RingComplete","RingInit","RingSign","SetMessage","SignMemos","SummaryAddTxIn","SummaryAddTxOut","SummaryComplete","SummaryInit","SummaryReady","TxComplete","TxDenied","TxState","TxStateIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode_owned","decode_owned","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_random","from_str","into","into","into","into_iter","iter","len","new","next","next_back","nth","size_hint","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","SubaddressKeyReq","SubaddressKeyResp","account_index","account_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","fmt","fmt","from","from","header","into","into","new","new","spend_public","subaddress_index","subaddress_index","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_private","vzip","vzip","ASSOC_INPUT_RULES","AddTxInFlags","AddTxOutFlags","AddTxOutUnblindingFlags","FOG_IDS","FogId","HAS_ADDRESS","HAS_FOG_AUTHORITY_SIG","HAS_INPUT_RULES","HAS_MASKED_AMOUNT","HAS_ONETIME_PRIVATE_KEY","HAS_PRIVATE_KEY","MobMain","MobTest","None","SignalMain","SignalTest","Tx","TxAddTxOut","TxComplete","TxGetKeyImage","TxGetResponse","TxHeader","TxInfo","TxInfoReq","TxInit","TxKeyImage","TxMemoSig","TxMemoSign","TxOnetime","TxOnetimeKey","TxPrivateKey","TxPublicKey","TxResponse","TxRingInit","TxRingInitFlags","TxRingSign","TxSetBlinding","TxSetMessage","TxSummaryAddTxIn","TxSummaryAddTxOut","TxSummaryAddTxOutUnblinding","TxSummaryBuild","TxSummaryInit","account_index","address","address_spend_public","address_view_public","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blinding","blinding","blinding","block_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_zero","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","commitment","commitment","complement","complement","complement","complement","contains","contains","contains","contains","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_owned","decode_owned","decode_owned","decode_owned","decode_owned","default","default","default","difference","difference","difference","difference","digest","digest","digest","empty","empty","empty","empty","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_len","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","encode_prefixed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","fee_token_id","fee_value","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fog_authority_sig","fog_id","fog_info","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","hmac","index","index","index","input_rules_digest","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","key_image","kind","masked_amount","masked_token_id","masked_value","message","message","new","new","new","new","new","new","new","new","new","new","new","new","new","new","not","not","not","not","num_inputs","num_outputs","num_rings","onetime_private_key","output_blinding","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload_len","pseudo_output_commitment","public_key","public_key","real_index","remove","remove","remove","remove","reserved","reserved","reserved","reserved","ring_index","ring_index","ring_index","ring_size","scalar","set","set","set","set","state","state","state","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","subaddress_index","subaddress_index","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","target_key","target_key","target_view_public","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","token_id","token_id","token_id","tombstone_block","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_out","tx_private_key","tx_private_key","tx_public_key","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","unmasked_amount","unmasked_amount","unmasked_value","unmasked_value","url","value","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WalletKeyReq","WalletKeyResp","account_index","account_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","decode","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","fmt","fmt","from","from","header","into","into","new","new","spend_public","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_private","vzip","vzip"],"q":[[0,"ledger_mob_apdu"],[74,"ledger_mob_apdu::app_info"],[175,"ledger_mob_apdu::digest"],[187,"ledger_mob_apdu::ident"],[249,"ledger_mob_apdu::key_image"],[294,"ledger_mob_apdu::prelude"],[328,"ledger_mob_apdu::random"],[366,"ledger_mob_apdu::state"],[454,"ledger_mob_apdu::subaddress_keys"],[499,"ledger_mob_apdu::tx"],[1290,"ledger_mob_apdu::wallet_keys"],[1333,"core::fmt"],[1334,"core::fmt"],[1335,"core::fmt"],[1336,"ledger_proto"],[1337,"alloc::string"],[1338,"core::any"],[1339,"core::cmp"],[1340,"core::iter::traits::collect"],[1341,"core::option"],[1342,"core::hash"],[1343,"mc_crypto_ring_signature::ring_signature"],[1344,"curve25519_dalek::scalar"],[1345,"mc_core_types::keys"],[1346,"mc_core_types::keys"],[1347,"mc_transaction_types::unmasked_amount"],[1348,"mc_crypto_keys::ristretto"],[1349,"mc_core_types::account"],[1350,"mc_crypto_ring_signature::ring_signature::key_image"],[1351,"rand_core"],[1352,"rand_core"],[1353,"mc_core_types::keys"],[1354,"mc_core_types::account"],[1355,"mc_core_types::keys"]],"d":["APDU error type","Generic APDU request trait","Helper trait for defining static APDU commands, …","Class ID for APDU commands","","Request a key image","Fetch a random value","Fetch keys for a specific subaddress","Fetch wallet keys","Instruction ID for APDU commands","Fetched signed identity following approval","Issue SLIP-0017 ED25519 identity request","MobileCoin APDU instruction codes","Invalid APDU encoding","Invalid buffer length","Invalid Utf8 string encoding","Invalid APDU encoding version {0}","MobileCoin APDU Class","","Add TxOuts to ring","Complete a transaction","Fetch transaction state","Fetch key image for a signed ring","Fetch a response for a given ring entry in the signed ring","Initialise a transaction","Sign a memo","Start a ring signing operation","Set blinding factors","Set message for signing","Sign ring","Add TxIn to summary","Add TxOut to summary","Add TxOut unblinding to summary","Build Tx summary","Start building TX summary","Application Information APDUs","","","","","","","Helpers for computing APDU / event digests","Helper macro for encoding <code>bitflags</code> types","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Fetch the ApduHeader for a given APDU request","Ed25519 Identity APDUs for SLIP-0013/17 signing support","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Key Image APDUs, used for key matching","Fetch P1 value (defaults to <code>0</code> if not extended)","Fetch P2 value (defaults to <code>0</code> if not extended)","Prelude to simplify downstream use of APDU objects","","Application State APDUs","Subaddress related APDUs, for fetching / checking wallet …","","","","","","","Transaction related APDUs, used to execute a transaction …","","","","","Wallet key APDUs, for fetching root account keys","Application info flags","Fetch application info APDU","Application information response APDU","Indicates app has tx summary feature","Indicates app is unlocked for key requests","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Decode an app version APDU from the provided buffer","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","Encode an app version APDU into the provided buffer","","","Compute APDU encoded length","","","","","","","","Application flags","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Application name","Create a new application version APDU","Returns the complement of this set of flags.","","Protocol version (must be 1)","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Application version","","","","","","","","","","","","","","","","Fetch an identity object from the device following user …","Identity key response APDU, contains derived ed25519 …","Request an ed25519 identity for provided URI and index, …","","","","","","","Challenge to be signed","","","","","","","Decode a <code>IdentSignReq</code> APDU from the provided buffer","","","Encode an <code>IdentSignReq</code> APDU into the provided buffer","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","SLIP-0017 account index (note this differs from SLIP-0010)","Identity URI","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new application version APDU","Create a new <code>IdentResp</code> APDU","Derived public key","Signature over challenge","","","","","","","","","","","","","","","","Resolve a key image for a specific subaddress and …","Key image response APDU","SLIP-0010 account index","SLIP-0010 account index","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Key Image (compressed point)","Create a new application version APDU","Create a new <code>KeyImage</code> APDU","Subkey index","Subaddress index","","","","","","","TX_OUT public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Random value","","","Transaction digest, used to keep a running digest of …","","","","","","","","","","","","","","","","","","","","","Engine state enumeration used in crate::tx::TxInfo to …","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reset state digest from random seed","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new (empty) state digest","","","","","","","","","","","","","","","","","","","","","","Update transaction digest with new event","","","","Request keys for a given account index and subaddress","Subaddress key response","SLIP-0010 account index","SLIP-0010 account index","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new SubaddressKeyReq APDU","Create a new <code>SubaddressKeyResp</code> APDU","Spend public key","Subkey index","Subaddress index","","","","","","","","","Vew Private Key","","","TxOutSummary associated with input rules","TxSummaryAddTxOut flags","TxSummaryAddTxOut flags","TxSummaryAddTxOut flags","TODO: support old signal fog URLs List of supported fogs …","Fog identifier for resolving account information","TxSummaryAddTxOutUnblinding contains address information","TxSummaryAddTxOutUnblinding contains fog authority …","TxInSummary contains input rules digest","TxOutSummary contains masked amount","Ring contains onetime private key (used for gift codes / …","TxSummaryAddTxOutUnblinding contains private key","MobileCoin MainNet fog","MobileCoin TestNet fog","No fog associated with account","Signal MainNet fog","Signal TestNet fog","Marker trait for transaction key type (to be moved to …","Add a TxOut to a ring signing operation","Complete transaction operation (0 length APDU)","Fetch a key image for a signed ring, returns <code>TxKeyImage</code> on …","Fetch a response scalar for a ring entry in a signed ring, …","Header shared between TX response APDUs","Transaction information response APDU.","Transaction information request APDU","Transaction initialisation APDU, sets up a transaction for …","Key image response APDU for a signed ring","Memo signature response","Memo HMAC signing request","Marker trait for onetime key type (to be moved to …","Transaction onetime key type (to be moved to <code>mc_core_types</code>)","Transaction private key type (to be moved to <code>mc_core_types</code>)","Transaction public key type (to be moved to <code>mc_core_types</code>)","TX Response APDU, contains a response scalar for a given …","Start a ring signing operation","TxRingInit flags","Execute signing operation for a completed ring (0 length …","Set blinding for ring signing","Set the message for the transaction","Add TxInSummary for a transaction","Add TxOutSummary to the summary","Add TxOutSummaryUnblinding to the summary","Complete TxSummary building","Set TxSummary for a transaction","Account index for SLIP-010 derivation","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero’th challenge for signed ring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tx_out.masked_amount.commitment field","MaskedAmountV2.commitment","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Decode a <code>TxSetMessage</code> APDU from the provided buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Transaction state digest","Transaction state digest","Transaction state digest","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","Encode an <code>TxSetMessage</code> APDU into the provided buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch flags","","Flags for ring init message","AddTxOut flags","AddTxOutUnblinding flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fog ID for address if available","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Compute hash of TxSetMessage object","Compute hash from TxRingInit object","","Compute hash from TxSetBlinding object","Compute hash of TxAddTxOut object","Compute hash of TxRingSign object","Compute hash for TxMemoSign object","Compute the hash of the TxSummaryInit object","Compute hash for TxSummaryAddTxOut","","Compute hash for TxSummaryAddTxOutUnblinding","","Compute hash for TxSummaryAddTxIn","","Compute hash for TxSummaryBuild","","","","","","","","","","","","","","","","","Memo HMAC","TxOut index for idempotency","TxOut index for idempotency","TxIn index for idempotency","Digest of input rules per MCIP 52 if has_input_rules is set","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Key Image for signed ring","Memo type","Fetch masked amount if included","MaskedAmountV2.masked_token_id","MaskedAmountV2.masked_value","<code>Message</code> for transaction, derived from prefix","","Create a new <code>TxInit</code> request","","Create a new ring initialisation request","Crete a new TxSetBlinding object","Create a new add tx out request","Create a new TX response request","Create a new tx response response message","Create a new memo signing request with the provided …","Create a new memo signature response","Create a new TxSummaryInit object","Create a new TxSummaryAddTxOut APDU","Create a new TxSummaryAddTxOutUnblinding APDU","Create a new TxSummaryAddTxIn APDU","Create a new TxSummaryBuild APDU","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Number of rings to be signed","One-time private key for pre-signed inputs etc. Zero if …","","","","","","Memo payload","Payload length, always 48 bytes (included for future …","","The tx_out.public_key field","The per output tx public key","Index of real tx_in in ring","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Reserved for future use, must be 0 (ensures 32-bit …","","","","The tx_out index in the ring","Index of response to be fetched","Index of returned response","Size of ring to be signed","Response scalar","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Current transaction engine state","Current transaction engine state","Current transaction engine state","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Subaddress of real tx_in, used for onetime_private_key …","Signing subaddress index","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The tx_out.target_key field","The one-time public address of this output.","Target view public subaddress","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Ring token_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build ReducedTxOut from TxAddTxOut object","","","TxOut public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Fetch the UnmaskedAmount from a TxSummaryAddTxIn object","UnmaskedAmount.value","UnmaskedAmount.value","Resolve fog ID to URL","Ring value","Value associated with current state (zero otherwise)","Value associated with current state (zero otherwise)","Value associated with current state (zero otherwise)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wallet key request APDU.","Wallet key response APDU","SLIP-0010 account index","SLIP-0010 account index","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new WalletKeyReq APDU","Create a new <code>WalletKeyResp</code> APDU","Spend public key","","","","","","","","","View Private Key","",""],"i":[0,0,0,92,1,1,1,1,1,92,1,1,0,4,4,4,4,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,4,1,4,1,1,1,0,0,1,4,4,1,4,4,1,93,0,4,1,0,92,92,0,0,0,0,1,4,4,1,4,1,0,4,1,4,1,0,0,0,0,14,14,14,14,14,14,14,14,14,14,16,17,14,16,17,14,16,17,14,16,17,14,14,14,14,16,17,14,16,14,16,14,14,16,17,14,16,17,14,16,14,16,17,14,14,17,16,17,14,14,14,14,14,16,17,14,14,14,14,14,14,16,14,14,14,16,17,14,14,14,17,17,14,14,17,14,14,14,14,14,16,17,14,14,16,17,14,16,17,14,16,17,14,14,17,16,17,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,40,38,39,40,38,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,39,40,38,39,40,38,39,40,38,39,40,38,39,38,38,38,39,40,38,40,40,40,38,39,40,38,39,40,38,39,40,38,39,40,38,39,40,0,0,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,41,42,42,41,42,41,42,41,42,41,42,41,42,41,41,42,41,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,44,45,44,45,44,45,44,45,44,45,45,44,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,46,47,48,46,47,48,46,47,48,46,47,48,46,48,46,48,46,48,46,48,46,48,46,48,46,46,48,48,46,47,48,48,46,46,47,48,47,46,47,48,47,47,47,47,46,47,48,46,48,46,46,46,47,48,46,46,47,48,46,47,48,48,46,47,48,0,0,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,53,52,52,53,52,53,53,52,53,52,53,52,53,52,53,52,53,53,52,53,58,0,0,0,0,0,59,59,60,58,57,59,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,56,56,56,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,66,56,78,75,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,70,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,67,76,57,58,59,60,57,58,59,60,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,77,60,61,62,77,57,58,59,60,74,82,83,57,58,59,60,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,63,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,79,79,76,56,65,76,56,78,61,62,63,64,65,57,57,57,57,57,66,67,68,69,70,71,72,73,74,75,76,58,58,58,58,58,56,59,59,59,59,59,77,78,60,60,60,60,60,79,80,81,82,83,56,56,56,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,77,64,65,57,66,67,68,73,75,76,58,56,59,78,60,79,63,64,65,66,67,68,69,71,73,75,76,56,78,79,80,81,74,76,56,78,78,57,58,59,60,57,58,59,60,57,58,59,60,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,57,58,59,60,70,73,76,76,76,64,75,63,64,65,66,67,71,72,73,74,75,76,56,78,79,57,58,59,60,75,75,63,65,66,57,58,59,60,73,73,78,67,76,65,57,58,59,60,73,76,56,78,67,71,72,65,72,57,58,59,60,74,82,83,57,58,59,60,57,58,59,60,65,73,57,58,59,60,67,76,73,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,65,56,78,79,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,67,56,56,73,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,57,58,59,60,56,78,56,78,77,65,74,82,83,61,62,63,64,65,57,66,67,68,69,70,71,72,73,74,75,76,58,56,59,77,78,60,79,80,81,82,83,0,0,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,89,88,88,89,88,89,89,88,89,88,89,88,89,88,89,89,88,89],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],0,0,[[1,1],3],[[4,5],[[7,[2,6]]]],[[4,5],[[7,[2,6]]]],[[1,5],8],[-1,-1,[]],[9,4],[-1,-1,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,11,[]],[-1,11,[]],0,0,0,0,[-1,-2,[],[]],[-1,12,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],14],[[14,14],14],[[14,14],2],[[14,14],14],[[14,14],2],[14,15],[[14,14],14],[[14,14],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[17,17],[14,14],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[14,14],18],[14,14],[[14,14],3],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[17,20]],4]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[],16],[[14,14],14],[[],14],[[16,[19,[11]]],[[7,[20]]]],[[17,[19,[11]]],[[7,[20,4]]]],[[14,[19,[11]]],[[7,[20]]]],[16,[[7,[20]]]],[17,[[7,[20,4]]]],[14,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[16,16],3],[[17,17],3],[[14,14],3],[[14,-1],2,21],0,[[16,5],8],[[17,5],8],[[14,5],8],[[14,5],8],[[14,5],8],[[14,5],8],[[14,5],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[15,[[22,[14]]]],[15,14],[15,14],[-1,14,21],[[14,-1],2,23],[-1,10,[]],[[14,14],2],[[14,14],14],[[14,14],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,3],[14,3],0,[[11,24,24,14],17],[14,14],[[14,14],[[22,[18]]]],0,[[14,14],2],[[14,14,3],2],[[14,14],14],[[14,14],2],[[14,14],14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,14],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[14,14],14],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[11,25],[[26,[11]]]],[[11,11,27,27,27,[22,[28]]],[[26,[11]]]],[[29,29],[[26,[11]]]],[[],[[26,[11]]]],[[30,11],[[26,[11]]]],[[[19,[11]]],[[26,[11]]]],[[27,31,32,[26,[11]],[26,[11]]],[[26,[11]]]],[[33,[22,[[26,[11]]]],34],[[26,[11]]]],[[[22,[[2,[33,27,[19,[11]]]]]],35,35,3],[[26,[11]]]],[[34,[22,[36]],[22,[37]],[22,[[19,[11]]]]],[[26,[11]]]],[[27,27,27],[[26,[11]]]],[[[26,[11]],30,30,30],[[26,[11]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[38,38],[39,39],[40,40],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[38,20]],4]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[38,[19,[11]]],[[7,[20,4]]]],[[39,[19,[11]]],[[7,[20]]]],[[40,[19,[11]]],[[7,[20]]]],[38,[[7,[20,4]]]],[39,[[7,[20]]]],[40,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[38,38],3],[[39,39],3],[[40,40],3],[[38,5],8],[[39,5],8],[[40,5],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,10,[]],[-1,10,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[30,24,[19,[11]]],38],[[[26,[11]],[26,[11]]],40],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[42,42],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[41,[19,[11]]],[[7,[20]]]],[[42,[19,[11]]],[[7,[20]]]],[41,[[7,[20]]]],[42,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[41,41],3],[[42,42],3],[[41,5],8],[[42,5],8],[-1,-1,[]],[-1,-1,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[30,27,31],41],[[30,27,43],42],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[45,45],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[44,[19,[11]]],[[7,[20]]]],[[45,[19,[11]]],[[7,[20]]]],[44,[[7,[20]]]],[45,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[44,44],3],[[45,45],3],[[44,5],8],[[45,5],8],[-1,-1,[]],[-1,-1,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]],4]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[46,[19,[11]]],[[7,[20,4]]]],[[48,[19,[11]]],[[7,[20]]]],[46,[[7,[20,4]]]],[48,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[46,46],3],[[48,48],3],[[46,5],8],[[46,5],[[7,[2,6]]]],[[48,5],8],[[48,5],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,48,[49,50]],[24,[[7,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],47],[47,20],[[],48],[47,22],[47,22],[[47,20],22],[47,[[2,[20,[22,[20]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,12,[]],[-1,12,[]],[-1,[[7,[-2]]],[],[]],[24,[[7,[46]]]],[11,[[7,[46,[51,[46]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],[[7,[46,[51,[46]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[48,[26,[11]]],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[53,53],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[52,[19,[11]]],[[7,[20]]]],[[53,[19,[11]]],[[7,[20]]]],[52,[[7,[20]]]],[53,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[52,52],3],[[53,53],3],[[52,5],8],[[53,5],8],[-1,-1,[]],[-1,-1,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[30,27],52],[[30,27,54,55],53],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56,[[22,[36]]]],0,0,[[],57],[[],58],[[],59],[[],60],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],[57,11],[58,11],[59,11],[60,11],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[61,61],[62,62],[63,63],[64,64],[65,65],[57,57],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[58,58],[56,56],[59,59],[77,77],[78,78],[60,60],[79,79],[80,80],[81,81],[82,82],[83,83],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],0,0,[57,57],[58,58],[59,59],[60,60],[[57,57],3],[[58,58],3],[[59,59],3],[[60,60],3],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[64,20]],4]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[57,20]]]]]],[[[19,[11]]],[[7,[[2,[58,20]]]]]],[[[19,[11]]],[[7,[[2,[59,20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[60,20]]]]]],[[],61],[[],62],[[],77],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],0,0,0,[[],57],[[],58],[[],59],[[],60],[[63,[19,[11]]],[[7,[20]]]],[[64,[19,[11]]],[[7,[20,4]]]],[[65,[19,[11]]],[[7,[20]]]],[[57,[19,[11]]],[[7,[20]]]],[[66,[19,[11]]],[[7,[20]]]],[[67,[19,[11]]],[[7,[20]]]],[[68,[19,[11]]],[[7,[20]]]],[[69,[19,[11]]],[[7,[20]]]],[[70,[19,[11]]],[[7,[20]]]],[[71,[19,[11]]],[[7,[20]]]],[[72,[19,[11]]],[[7,[20]]]],[[73,[19,[11]]],[[7,[20]]]],[[74,[19,[11]]],[[7,[20]]]],[[75,[19,[11]]],[[7,[20]]]],[[76,[19,[11]]],[[7,[20]]]],[[58,[19,[11]]],[[7,[20]]]],[[56,[19,[11]]],[[7,[20]]]],[[59,[19,[11]]],[[7,[20]]]],[[77,[19,[11]]],[[7,[20]]]],[[78,[19,[11]]],[[7,[20]]]],[[60,[19,[11]]],[[7,[20]]]],[[79,[19,[11]]],[[7,[20]]]],[[80,[19,[11]]],[[7,[20]]]],[[81,[19,[11]]],[[7,[20]]]],[[82,[19,[11]]],[[7,[20]]]],[[83,[19,[11]]],[[7,[20]]]],[63,[[7,[20]]]],[64,[[7,[20,4]]]],[65,[[7,[20]]]],[57,[[7,[20]]]],[66,[[7,[20]]]],[67,[[7,[20]]]],[68,[[7,[20]]]],[69,[[7,[20]]]],[70,[[7,[20]]]],[71,[[7,[20]]]],[72,[[7,[20]]]],[73,[[7,[20]]]],[74,[[7,[20]]]],[75,[[7,[20]]]],[76,[[7,[20]]]],[58,[[7,[20]]]],[56,[[7,[20]]]],[59,[[7,[20]]]],[77,[[7,[20]]]],[78,[[7,[20]]]],[60,[[7,[20]]]],[79,[[7,[20]]]],[80,[[7,[20]]]],[81,[[7,[20]]]],[82,[[7,[20]]]],[83,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[61,61],3],[[62,62],3],[[63,63],3],[[64,64],3],[[65,65],3],[[57,57],3],[[66,66],3],[[67,67],3],[[68,68],3],[[69,69],3],[[70,70],3],[[71,71],3],[[72,72],3],[[73,73],3],[[74,74],3],[[75,75],3],[[76,76],3],[[58,58],3],[[56,56],3],[[59,59],3],[[77,77],3],[[78,78],3],[[60,60],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[[83,83],3],[[57,-1],2,21],[[58,-1],2,21],[[59,-1],2,21],[[60,-1],2,21],0,0,[76,58],[56,59],0,0,0,0,[[61,5],8],[[62,5],8],[[63,5],8],[[64,5],8],[[65,5],8],[[57,5],8],[[57,5],8],[[57,5],8],[[57,5],8],[[57,5],8],[[66,5],8],[[67,5],8],[[68,5],8],[[69,5],8],[[70,5],8],[[71,5],8],[[72,5],8],[[73,5],8],[[74,5],8],[[75,5],8],[[76,5],8],[[58,5],8],[[58,5],8],[[58,5],8],[[58,5],8],[[58,5],8],[[56,5],8],[[59,5],8],[[59,5],8],[[59,5],8],[[59,5],8],[[59,5],8],[[77,5],8],[[78,5],8],[[60,5],8],[[60,5],8],[[60,5],8],[[60,5],8],[[60,5],8],[[79,5],8],[[80,5],8],[[81,5],8],[[82,5],8],[[83,5],8],0,0,[56,[[22,[[2,[77,[26,[11]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[22,[57]]]],[11,[[22,[58]]]],[11,[[22,[59]]]],[11,[[22,[60]]]],[11,57],[11,58],[11,59],[11,60],[11,57],[11,58],[11,59],[11,60],[-1,57,21],[-1,58,21],[-1,59,21],[-1,60,21],[24,[[7,[77]]]],[64,[[26,[11]]]],[65,[[26,[11]]]],[[57,-1],2,23],[66,[[26,[11]]]],[67,[[26,[11]]]],[68,[[26,[11]]]],[73,[[26,[11]]]],[75,[[26,[11]]]],[76,[[26,[11]]]],[[58,-1],2,23],[56,[[26,[11]]]],[[59,-1],2,23],[78,[[26,[11]]]],[[60,-1],2,23],[79,[[26,[11]]]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[57,57],3],[[58,58],3],[[59,59],3],[[60,60],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,3],[58,3],[59,3],[60,3],[57,3],[58,3],[59,3],[60,3],0,0,[76,[[22,[84]]]],0,0,0,0,[[30,11],63],[[[19,[11]]],64],[[11,11,27,27,27,[22,[28]]],65],[[29,29],66],[[11,35,35,35],67],[11,71],[[11,29],72],[[27,31,-1,[26,[11]],[26,[11]]],73,85],[[46,15,48,[26,[11]]],74],[[[26,[11]],30,30,30],75],[[11,[22,[84]],35,35,3],76],[[11,34,[22,[[2,[-1,86]]]],[22,[[2,[24,[26,[11]]]]]],[22,[37]]],[[7,[56,4]]],85],[[11,33,34,[22,[[26,[11]]]]],78],[[87,27],79],[57,57],[58,58],[59,59],[60,60],0,0,0,0,0,[[57,57],[[22,[18]]]],[[58,58],[[22,[18]]]],[[59,59],[[22,[18]]]],[[60,60],[[22,[18]]]],0,0,0,0,0,0,[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],0,0,0,0,0,0,0,0,0,[[57,57,3],2],[[58,58,3],2],[[59,59,3],2],[[60,60,3],2],0,0,0,[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],0,0,[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[57,57],2],[[58,58],2],[[59,59],2],[[60,60],2],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[67,25],[56,[[22,[37]]]],0,0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[56,34],[78,34],0,0,[77,24],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[88,88],[89,89],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[[19,[11]]],[[7,[[2,[20]]]]]],[[88,[19,[11]]],[[7,[20]]]],[[89,[19,[11]]],[[7,[20]]]],[88,[[7,[20]]]],[89,[[7,[20]]]],[[-1,[19,[11]]],[[7,[20]]],[]],[[-1,[19,[11]]],[[7,[20]]],[]],[[88,88],3],[[89,89],3],[[88,5],8],[[89,5],8],[-1,-1,[]],[-1,-1,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,88],[[30,90,91],89],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[4,"Instruction",0],[15,"tuple"],[15,"bool"],[4,"ApduError",0],[3,"Formatter",1333],[3,"Error",1333],[4,"Result",1334],[6,"Result",1333],[4,"Error",1335],[3,"ApduHeader",1336],[15,"u8"],[3,"String",1337],[3,"TypeId",1338],[3,"AppFlags",74],[15,"u16"],[3,"AppInfoReq",74],[3,"AppInfoResp",74],[4,"Ordering",1339],[15,"slice"],[15,"usize"],[8,"IntoIterator",1340],[4,"Option",1341],[8,"Hasher",1342],[15,"str"],[3,"ReducedTxOut",1343],[15,"array"],[15,"u64"],[6,"TxOnetimeKey",499],[3,"Scalar",1344],[15,"u32"],[6,"TxOutPublic",1345],[6,"SubaddressViewPublic",1345],[3,"CompressedCommitment",1346],[3,"UnmaskedAmount",1347],[3,"CompressedRistrettoPublic",1348],[3,"PublicSubaddress",1349],[6,"TxPrivateKey",499],[3,"IdentSignReq",187],[3,"IdentGetReq",187],[3,"IdentResp",187],[3,"KeyImageReq",249],[3,"KeyImageResp",249],[3,"KeyImage",1350],[3,"RandomReq",328],[3,"RandomResp",328],[4,"TxState",366],[3,"TxStateIter",366],[3,"Digest",366],[8,"RngCore",1351],[8,"CryptoRng",1351],[3,"TryFromPrimitiveError",1352],[3,"SubaddressKeyReq",454],[3,"SubaddressKeyResp",454],[6,"SubaddressViewPrivate",1345],[6,"SubaddressSpendPublic",1345],[3,"TxSummaryAddTxOutUnblinding",499],[3,"TxRingInitFlags",499],[3,"AddTxOutFlags",499],[3,"AddTxOutUnblindingFlags",499],[3,"AddTxInFlags",499],[3,"TxOnetime",499],[3,"Tx",499],[3,"TxInit",499],[3,"TxSetMessage",499],[3,"TxRingInit",499],[3,"TxSetBlinding",499],[3,"TxAddTxOut",499],[3,"TxRingSign",499],[3,"TxGetKeyImage",499],[3,"TxKeyImage",499],[3,"TxGetResponse",499],[3,"TxResponse",499],[3,"TxMemoSign",499],[3,"TxMemoSig",499],[3,"TxSummaryInit",499],[3,"TxSummaryAddTxOut",499],[4,"FogId",499],[3,"TxSummaryAddTxIn",499],[3,"TxSummaryBuild",499],[3,"TxInfoReq",499],[3,"TxComplete",499],[3,"TxInfo",499],[3,"TxHeader",499],[4,"MaskedAmount",1353],[8,"RingCtAddress",1349],[3,"ShortAddressHash",1349],[3,"Amount",1354],[3,"WalletKeyReq",1290],[3,"WalletKeyResp",1290],[6,"RootViewPrivate",1345],[6,"RootSpendPublic",1345],[8,"ApduStatic",0],[8,"ApduReq",0]],"b":[[45,"impl-Display-for-ApduError"],[46,"impl-Debug-for-ApduError"],[125,"impl-Octal-for-AppFlags"],[126,"impl-Binary-for-AppFlags"],[127,"impl-Debug-for-AppFlags"],[128,"impl-LowerHex-for-AppFlags"],[129,"impl-UpperHex-for-AppFlags"],[413,"impl-Debug-for-TxState"],[414,"impl-Display-for-TxState"],[415,"impl-Debug-for-Digest"],[416,"impl-Display-for-Digest"],[439,"impl-TryFrom%3C%26str%3E-for-TxState"],[440,"impl-TryFrom%3Cu8%3E-for-TxState"],[877,"impl-UpperHex-for-TxRingInitFlags"],[878,"impl-Binary-for-TxRingInitFlags"],[879,"impl-Debug-for-TxRingInitFlags"],[880,"impl-Octal-for-TxRingInitFlags"],[881,"impl-LowerHex-for-TxRingInitFlags"],[893,"impl-Binary-for-AddTxOutFlags"],[894,"impl-Debug-for-AddTxOutFlags"],[895,"impl-LowerHex-for-AddTxOutFlags"],[896,"impl-Octal-for-AddTxOutFlags"],[897,"impl-UpperHex-for-AddTxOutFlags"],[899,"impl-UpperHex-for-AddTxOutUnblindingFlags"],[900,"impl-LowerHex-for-AddTxOutUnblindingFlags"],[901,"impl-Octal-for-AddTxOutUnblindingFlags"],[902,"impl-Binary-for-AddTxOutUnblindingFlags"],[903,"impl-Debug-for-AddTxOutUnblindingFlags"],[906,"impl-UpperHex-for-AddTxInFlags"],[907,"impl-Octal-for-AddTxInFlags"],[908,"impl-Debug-for-AddTxInFlags"],[909,"impl-LowerHex-for-AddTxInFlags"],[910,"impl-Binary-for-AddTxInFlags"]]},\
"ledger_mob_cli":{"doc":"Command line utility for interacting with the Ledger …","t":"NENNNNNDNNLLLLLLLLLLLLMLLLLMLLFLLLLLLLLLLALLMFFMLLLLLLLLLLLLLLFMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Account","Actions","AppInfo","GetRandom","Ident","KeyImage","List","Options","Signer","Subaddress","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmd","command","command","command_for_update","command_for_update","device_index","eq","eq","execute","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","helpers","into","into","log_level","main","read_input","target","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","write_output","account","account","account","challenge","index","subaddress","subaddress","tx_public_key","uri","B64Data","HexData","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","from_str","from_str","into","into","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"ledger_mob_cli"],[63,"ledger_mob_cli::Actions"],[72,"ledger_mob_cli::helpers"],[104,"clap_builder::builder::command"],[105,"ledger_mob::handle"],[106,"anyhow"],[107,"ledger_lib::device"],[108,"core::marker"],[109,"core::fmt"],[110,"core::fmt"],[111,"clap_builder"],[112,"core::result"],[113,"clap_builder::util::id"],[114,"core::option"],[115,"serde::de"],[116,"core::any"],[117,"serde::ser"],[118,"alloc::string"]],"d":["Fetch account keys","","Fetch application info","Fetch a random value from the device","Fetch BIP0013/17 derived ed25519 public key (and …","Resolve key images for transaction public keys","List available devices","Ledger command line utility","","Fetch subaddress keys","","","","","","","","","","","","","Subcommand to execute","","","","","Device index (where more than one device is available)","","","Execute a command with the provided transport","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Enable verbose logging","","Helper to read input files where required","Supported transports for ledger discovery","","","","","","","","","","","","","","","Helper to write output files if <code>--output</code> argument is …","SLIP-0010 account index for SLIP-010 derivation","SLIP-0010 account index for SLIP-010 derivation","SLIP-0010 account index for SLIP-010 derivation","hex-encoded challenge to be signed","index for derived identity","Subaddress index","Subaddress index","Transaction public key","URI for derived identity","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[3,0,3,3,3,3,3,0,3,3,2,2,3,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,2,3,0,2,3,2,3,2,3,2,3,2,3,0,2,3,2,0,0,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,26,27,28,29,29,27,28,28,29,0,0,21,21,24,21,24,21,24,21,24,21,24,21,24,21,24,21,24,21,24,21,24,21,21,24,21,24,21,24,21,24],"f":[0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],1],[[],1],[[],1],[[],1],0,[[2,2],5],[[3,3],5],[[[6,[-1]],3],[[7,[4]]],[8,9]],[[2,10],11],[[3,10],11],[-1,-1,[]],[-1,-1,[]],[12,[[14,[2,13]]]],[12,[[14,[3,13]]]],[12,[[14,[2,13]]]],[12,[[14,[3,13]]]],[[],[[16,[15]]]],[17,5],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[7,[4]]]],[17,[[7,[-1]]],18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[2,12],[[14,[4,13]]]],[[3,12],[[14,[4,13]]]],[[2,12],[[14,[4,13]]]],[[3,12],[[14,[4,13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,-1],[[7,[4]]],20],0,0,0,0,0,0,0,0,0,0,0,[21,[[23,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[24,24],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[21,21],5],[[24,24],5],[[21,10],11],[[24,10],11],[-1,-1,[]],[-1,-1,[]],[17,[[14,[21]]]],[17,[[14,[24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,25],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",104],[3,"Options",0],[4,"Actions",0],[15,"tuple"],[15,"bool"],[3,"DeviceHandle",105],[6,"Result",106],[8,"Device",107],[8,"Send",108],[3,"Formatter",109],[6,"Result",109],[3,"ArgMatches",110],[6,"Error",111],[4,"Result",112],[3,"Id",113],[4,"Option",114],[15,"str"],[8,"DeserializeOwned",115],[3,"TypeId",116],[8,"Serialize",117],[3,"HexData",72],[15,"u8"],[15,"array"],[3,"B64Data",72],[3,"String",118],[13,"Account",63],[13,"Subaddress",63],[13,"KeyImage",63],[13,"Ident",63]],"b":[]},\
"ledger_mob_core":{"doc":"MobileCoin hardware wallet core","t":"SSDCLLLLLLLLLLALLLLLLLLLALLLLLLLLLLNNNNDNNNNNNNINDENNENSIEDNNNNNNNNENNNNNNNNSNNNNNNNNSNNNENNNRRNNNNNENNNNNNENDNNNNENSSDENNDNNNNNNNNNNNNNNNNNNNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDFLLLLLLLLLLLLLLLMLLLLLLLLLLLLFMMMLLLLLLAFMLLLLLLLLLLLLMLLLMNELLLLLLLLLLLLLLLL","n":["MOB","NUM_BYTES","TokenId","apdu","append_to_transcript","borrow","borrow_mut","clone","clone_into","cmp","conditional_select","ct_eq","deref","deserialize","engine","eq","eq","fmt","fmt","from","from","from","from_str","hash","helpers","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","zeroize","AddTxIn","AddTxOut","ApprovalPending","Approved","BlockVersion","BuildMemos","BuildRing","Complete","Complete","Complete","Denied","Deny","Driver","EncodingFailed","Engine","Error","Error","Error","Event","Execute","FOUR","FogCert","FogId","Function","GetKeyImage","GetRandom","GetSubaddressKeys","GetWalletKeys","Ident","IdentGet","IdentRejected","IdentSign","IdentState","Identity","Init","Init","Init","InvalidKey","InvalidLength","InvalidState","KeyImage","MAX","MemoHmac","MissingBlindings","MissingOnetimePrivateKey","MobMain","MobTest","None","None","None","ONE","OnetimeKeyRecoveryFailed","OtherAddress","OurAddress","Output","Pending","Pending","Pending","RESP_SIZE","RING_SIZE","RandomValue","Ready","Ready","RingFull","RingInitFailed","RingState","RingUpdateFailed","SetMessage","SignError","SignRing","SignalMain","SignalTest","State","State","StateIter","SubaddressKeys","Summary","SummaryInitFailed","SummaryMissingOutput","SummaryState","Swap","THREE","TWO","TokenId","TransactionEntity","TxAddTxout","TxComplete","TxDigest","TxGetInfo","TxGetKeyImage","TxGetResponse","TxInit","TxKeyImage","TxResponse","TxRingInit","TxSetBlinding","TxSetMessage","TxSign","TxSignMemo","TxSummaryAddInput","TxSummaryAddOutput","TxSummaryAddOutputUnblinding","TxSummaryBuild","TxSummaryInit","UnexpectedEvent","Unknown","WalletKeys","ZERO","address","append_to_transcript","approve","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","decode","decode","decode_owned","decode_owned","default","default","default","default","default","default","deny","deref","deserialize","digest","e_memo_feature_is_supported","encode","encode","encode","encode_len","encode_len","encode_prefixed","encode_prefixed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_random","from_str","from_str","from_str","from_str","from_str","from_str","get_account","get_subaddress","hash","hash","ident","ident_approve","ident_init","ident_ref","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_unlocked","iter","iter","iter","iter","iterator","len","lock","masked_amount_v2_is_supported","masked_token_id_feature_is_supported","message","mint_transactions_are_supported","minting_to_fog_addresses_is_supported","mixed_transactions_are_supported","mlsags_sign_extended_message_and_tx_summary_digest","mlsags_sign_extended_message_digest","nested_multisigs_are_supported","new","new","new","new_with_rng","next","next_back","nth","parse","partial_cmp","partial_cmp","progress","report","require_block_metadata","reset","ring_signer","ring_signer_init","ring_signer_ref","serialize","signed_input_rules_are_supported","size_hint","slip10_derive_ed25519","spki","spki","state","state","state","summarizer","summarizer_init","summarizer_ref","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","update","update","url","validate_transaction_outputs_are_sorted","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","account_index","account_index","account_index","account_index","address","associated_to_input_rules","blinding","block_version","challenge","fee","fog_info","ident_index","ident_uri","index","input_rules_digest","kind","masked_amount","message","num_inputs","num_outputs","num_rings","onetime_private_key","output_blinding","payload","pseudo_output_commitment","public_key","real_index","receiver_view_public","ring_size","subaddress_index","subaddress_index","subaddress_index","subaddress_index","target_key","token_id","tombstone_block","tx_private_key","tx_public_key","txout_public_key","unmasked_amount","unmasked_amount","value","account_index","account_index","account_index","c_zero","digest","digest","hmac","key_image","key_image","public_key","ring_index","scalar","signature","spend_public","spend_public","state","state","subaddress_index","subaddress_index","value","view_private","view_private","c_zero","key_image","CompressedRistretto","PrintableWrapper","PublicAddress","b58_encode_public_address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","data","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","fmt_token_val","fog_authority_sig","fog_report_id","fog_report_url","from","from","from","into","into","into","printable_wrapper","sign_authority","spend_public_key","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view_public_key","vzip","vzip","vzip","wrapper","PublicAddress","Wrapper","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"ledger_mob_core"],[35,"ledger_mob_core::engine"],[453,"ledger_mob_core::engine::Event"],[495,"ledger_mob_core::engine::Output"],[517,"ledger_mob_core::engine::RingState"],[519,"ledger_mob_core::helpers"],[581,"ledger_mob_core::helpers::printable_wrapper"],[599,"mc_crypto_digestible"],[600,"core::cmp"],[601,"subtle"],[602,"core::result"],[603,"serde::de"],[604,"core::fmt"],[605,"core::fmt"],[606,"core::option"],[607,"serde::ser"],[608,"alloc::string"],[609,"core::any"],[610,"mc_core_types::account"],[611,"rand_core"],[612,"ledger_proto::error"],[613,"core::fmt"],[614,"ledger_mob_apdu::tx::summary"],[615,"ledger_mob_apdu::tx::summary"],[616,"ledger_mob_apdu::wallet_keys"],[617,"ledger_mob_apdu::tx"],[618,"ledger_mob_apdu::subaddress_keys"],[619,"ledger_mob_apdu::tx::ring"],[620,"ledger_mob_apdu::random"],[621,"ledger_mob_apdu::key_image"],[622,"ledger_mob_apdu::tx::summary"],[623,"ledger_mob_apdu::tx::ring"],[624,"mc_transaction_summary::report"],[625,"mc_core_types::keys"],[626,"mc_core_types::keys"],[627,"ledger_mob_apdu::state"],[628,"mc_core_types::account"],[629,"mc_core_types::account"],[630,"bytes::buf::buf_mut"],[631,"prost::encoding"],[632,"prost::encoding"],[633,"bytes::buf::buf_impl"]],"d":["Represents the MobileCoin token id for MOB token","Represents the number of bytes in a well-formed TokenId","Token Id, used to identify different assets on on the …","","","","","","","","","","","","The Engine provides functionality required by hardware …","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Pending user approval","Challenge approved, signing allowed","A block version number that is known to be less or equal to","Transaction init, building memos","","","","Transaction complete","Challenged rejected, return error","Transaction denied / aborted","<code>Driver</code> trait provides platform support for <code>Engine</code> instances","Message encoding failed","Engine provides hardware-independent support for …","super::Engine errors","","Transaction failed","<code>Engine</code> input events, typically decoded from request APDUs","","Constant for block version four","Fog certificate information for FogId types","Fog identifier for resolving account information","","Fetch key image","Fetch random value via RNG","Fetch subaddress keys","Fetch wallet keys","Identity request pending approval","Fetch signed identity","Summary initialisation failed","Request BIP-0017 derived ed25519 identity","Identity challenge state","BIP-0017 derived identity and challenge","","","Idle state, no transaction running","Invalid key (decompression failed)","Invalid argument length","Invalid engine state","Computed key image","The maximum value of block_version that this build of …","HMAC for signed memo","Missing blinding values","Missing onetime_private_key","MobileCoin MainNet fog","MobileCoin TestNet fog","","","No fog associated with account","Constant for block version one","Error when deriving keys for signing","Outputs to other accounts (hash {0})","Outputs to a non-change address that we control (hash {0})","<code>Engine</code> outputs (in response to events), typically encoded …","Indicate the device is waiting for user input","Challenge loaded, pending approval","Transaction pending user approval","Ring response size (2 * RING_SIZE)","Maximum ring size","Random value","","Ready to start ring signing","Too many ring entries","Error configuring ring for signing","Ring signing states","Error updating ring","Ready to set transaction message","Signing error","Signing ring(s)","Signal MainNet fog","Signal TestNet fog","Engine internal state enumeration","Engine state","An iterator over the variants of Self","Subaddress keys","Loading TxSummary for verification","Summary initialisation failed","Summary missing output","Summarizer state enumeration","Outputs to swap counterparty","Constant for block version three","Constant for block version two","Token Id, used to identify different assets on on the …","An entity with whom a transaction can interact, and who …","Add TxOut to ring","Complete transaction","Transaction digest, used to keep a running digest of …","Fetch TX info / state","Fetch key image","Fetch responses","Initialise transaction","Key image (and c_zero) from signed ring","Response entry from a signed ring","Initialise ring signing","","Set transaction message","Sign ring","Sign transaction memos","Add input to TxSummary","Add output to TxSummary","Add output unblinding to TxSummary","Build complete TxSummary","Set transaction summary (replaces TxSetMessage where …","Unexpected event","Unknown / not-yet defined error (placeholder)","Wallet keys","Refers to the block version number at network launch.","Resolve address if available","","Approve a pending transaction (advances state to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clear context, executing drop if required","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deny a pending transaction","","","Fetch digestfor outputs containing this","The encrypted memos feature is introduced in v1. MCIP #3","Encode an <code>Output</code> object to a response APDU","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Reset state digest from random seed","","","","","","","Fetch an <code>Account</code> instance for a given wallet index","Fetch a Subaddress instance for a given wallet and …","","Compute a SHA512_256 hash for state-mutating events, used …","Return ident info if available","Approve or deny a pending identity request, updating the …","Initialise identity function","Fetch ident context","Initialise an uninitialised engine instance pointer, …","In-place initialisation","Initialise an Output pointer without allocation","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Check whether engine is unlocked (ie. key requests and …","","","","","Iterator over block versions from one up to max, …","","Lock the engine (requires approval for key requests and …","Masked amount V2 derivation introduced with block version …","The confidential token ids feature is introduced in v2. …","Fetch message for transactions in progress","Mint transactions are introduced in v2. MCIP #37","Minting_to_fog_addresses is supported in v3 MCIP #53","Mixed transactions are introduced in v3 MCIP #31","MLSAGs sign extended-message-and-tx-summary digest …","The extended message digest is used when signing MLSAGs in …","Nested multisigs are supporoted starting from v3. [MCIP …","Create a new / empty function context","Create a new transaction engine instance with the provided …","Create a new (empty) state digest","Create a new transaction engine instance with the provided …","","","","Parse an incoming APDU to engine event","","","Fetch progress for non-interactive states (summary, ring …","Return report if available","<code>BlockData.metadata</code> is required starting from v3. MCIP #43","Reset engine state","Fetch ring signer context","Setup ring-signer context","Fetch ring signer context","","Signed input rules are introduced in v3. MCIP #31","","SLIP-0010 derivation for ed25519 keys","","Fetch SPKI string for a given FogId","Fetch current engine state","Fetch state for outputs containing this","Map engine states to apdu states for transmission","Fetch summarizer context","Setup summarizer context","Fetch summarizer context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unlock the engine (allowing key requests and scanning)","Handle incoming transaction events","Update transaction digest with new event","Resolve fog ID to URL","Transactions must be sorted from v3 onward. MCIP #34","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index into ring","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/ A 32-byte compressed Ristretto curve point (public key)","/ This wraps all of the above messages using “oneof”, …","/ A public address, used to identify recipients.","Helper to b58 encode PublicAddress equivalent types without","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/ View key signature over the fog authority …","/ Optional fog report id. / The fog report server may …","/ Optional url of fog report server. / Empty string when …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Nested message and enum types in <code>PrintableWrapper</code>.","Re-implementation of <code>Signer</code> for <code>RistrettoPrivate</code> using …","/ Spend public key","","","","","","","","","","","","","/ View public key","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,32,32,29,31,0,33,30,30,32,33,31,33,0,29,0,0,30,33,0,30,24,0,0,0,27,27,27,27,33,27,29,27,0,28,30,32,33,29,29,29,28,24,28,29,29,36,36,27,28,36,24,29,26,26,0,28,31,33,0,0,28,32,33,29,29,0,29,33,29,33,36,36,0,28,0,28,33,29,29,0,26,24,24,0,0,27,27,0,27,27,27,27,28,28,27,27,27,27,27,27,27,27,27,27,29,29,28,24,20,24,20,25,26,20,24,27,28,29,30,31,32,33,34,35,36,25,26,20,24,27,28,29,30,31,32,33,34,35,36,25,26,24,27,28,29,30,31,32,33,34,35,36,26,24,27,28,29,30,31,32,33,34,35,36,26,24,35,36,35,36,25,24,30,31,32,36,20,24,24,28,24,28,35,36,35,36,35,36,26,24,28,28,29,30,31,32,33,35,36,26,26,24,24,27,28,29,29,30,30,31,32,32,33,33,35,35,36,25,26,20,24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,29,30,31,32,33,34,35,36,35,24,30,31,32,33,36,20,20,24,27,20,20,25,25,20,27,28,25,26,20,24,27,28,29,30,31,32,33,34,35,36,34,20,30,31,32,33,24,34,20,24,24,20,24,24,24,24,24,24,25,20,35,20,34,34,34,27,26,24,20,20,24,20,25,25,25,24,24,34,22,90,36,20,28,33,25,25,25,26,24,27,28,29,30,31,32,33,34,35,36,26,24,29,30,32,33,35,25,26,20,24,24,27,28,29,30,30,31,31,32,32,33,33,34,35,36,25,26,20,24,27,28,29,30,31,32,33,34,35,36,25,26,20,24,27,28,29,30,31,32,33,34,35,36,20,20,35,36,24,33,25,26,20,24,27,28,29,30,31,32,33,34,35,36,91,92,93,94,95,96,97,98,99,100,95,99,99,101,102,103,96,98,98,98,94,104,97,103,102,96,104,103,104,92,93,103,104,96,104,100,95,103,93,95,102,104,105,106,107,108,109,110,110,107,108,111,112,112,111,105,106,109,110,106,107,113,105,106,114,114,0,0,0,0,78,79,80,78,79,80,78,79,80,78,79,80,78,79,80,78,78,79,80,78,79,80,78,79,80,78,79,80,0,79,79,79,78,79,80,78,79,80,0,0,79,78,79,80,78,79,80,78,79,80,78,79,80,79,78,79,80,80,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84],"f":[0,0,0,0,[[1,[3,[2]],-1],4,5],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],4,[],[]],[[1,1],6],[[1,1,7],1],[[1,1],7],[1],[-1,[[8,[1]]],9],0,[[1,1],10],[[1,11],10],[[1,12],[[8,[4,13]]]],[[1,12],[[8,[4,13]]]],[11,1],[11,1],[-1,-1,[]],[14,[[8,[1]]]],[[1,-1],4,15],0,[-1,-2,[],[]],[[1,1],[[16,[6]]]],[[1,-1],8,17],[-1,-2,[],[]],[-1,18,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[1,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[20,[-1,-2]],21],[[16,[0]]],22,23],[[24,[3,[2]],-1],4,5],[[[20,[-1,-2]]],4,22,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,4],[26,26],[24,24],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[26,26],6],[[24,24],6],[[[3,[2]]],[[8,[[4,[37]]]]]],[[[3,[2]]],[[8,[[4,[37]]]]]],[[[3,[2]]],[[8,[[4,[37]]]]]],[[[3,[2]]],[[8,[[4,[37]]]]]],[[],25],[[],24],[[],30],[[],31],[[],32],[[],36],[[[20,[-1,-2]]],4,22,23],[24],[-1,[[8,[24]]],9],[28,[[16,[35]]]],[24,10],[[28,[3,[2]]],[[8,[37,38]]]],[[35,[3,[2]]],[[8,[37]]]],[[36,[3,[2]]],[[8,[37]]]],[35,[[8,[37]]]],[36,[[8,[37]]]],[[-1,[3,[2]]],[[8,[37]]],[]],[[-1,[3,[2]]],[[8,[37]]],[]],[[26,26],10],[[24,24],10],[[28,28],10],[[28,33],10],[[29,29],10],[[30,30],10],[[31,31],10],[[32,32],10],[[33,33],10],[[35,35],10],[[36,36],10],[[26,12],[[8,[4,13]]]],[[26,12],[[8,[4,13]]]],[[24,12],[[8,[4,13]]]],[[24,12],[[8,[4,13]]]],[[27,12],39],[[28,12],39],[[29,12],39],[[29,12],39],[[30,12],39],[[30,12],[[8,[4,13]]]],[[31,12],39],[[32,12],[[8,[4,13]]]],[[32,12],39],[[33,12],39],[[33,12],[[8,[4,13]]]],[[35,12],[[8,[4,13]]]],[[35,12],[[8,[4,13]]]],[[36,12],[[8,[4,13]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[40,27],[41,27],[42,27],[43,27],[44,27],[45,27],[46,27],[47,27],[48,27],[49,27],[50,27],[-1,-1,[]],[51,27],[52,27],[53,27],[54,27],[55,27],[56,27],[57,27],[58,27],[59,27],[60,27],[61,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,35,[62,63]],[14,[[8,[24]]]],[14,[[8,[30]]]],[14,[[8,[31]]]],[14,[[8,[32]]]],[14,[[8,[33]]]],[14,[[8,[36]]]],[[[20,[-1,-2]],64],65,22,23],0,[[24,-1],4,15],[27,[[16,[[66,[2]]]]]],[[[20,[-1,-2]]],[[16,[0]]],22,23],[[[20,[-1,-2]],10],4,22,23],[[25,64,14,[3,[2]]],[[8,[0,29]]]],[25,[[16,[0]]]],[[-1,-2],4,22,23],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2]]],10,22,23],0,0,0,[[],34],[[],67],[34,37],[[[20,[-1,-2]]],4,22,23],[24,10],[24,10],[[[20,[-1,-2]]],[[16,[[3,[2]]]]],22,23],[24,10],[24,10],[24,10],[24,10],[24,10],[24,10],[[],25],[-1,[[20,[-1]]],22],[[],35],[[-1,-2],[[20,[-1,-2]]],22,23],[34,16],[34,16],[[34,37],16],[[2,[3,[2]]],[[8,[27,38]]]],[[26,26],[[16,[6]]]],[[24,24],[[16,[6]]]],[[[20,[-1,-2]]],[[16,[37]]],22,23],[[[20,[-1,-2]]],[[16,[68]]],22,23],[24,10],[[[20,[-1,-2]]],4,22,23],[25,[[16,[0]]]],[[25,37,37,69,70,11,[3,[2]],11,[16,[71]]],[[8,[0,29]]]],[25,[[16,[0]]]],[[24,-1],8,17],[24,10],[34,[[4,[37,[16,[37]]]]]],[[-1,[3,[64]]],72,[]],[-1,[[3,[2]]],[]],[36,[[3,[2]]]],[[[20,[-1,-2]]],33,22,23],[28,[[16,[33]]]],[33,73],[25,[[16,[0]]]],[[25,[66,[2]],24,37,37,69,74],[[8,[0,29]]]],[25,[[16,[0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[64,[[8,[24]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[14,[[8,[30]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[14,[[8,[31]]]],[-1,[[8,[-2]]],[],[]],[14,[[8,[32]]]],[14,[[8,[33]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[[20,[-1,-2]]],4,22,23],[[[20,[-1,-2]],27],[[8,[28,29]]],22,23],[[35,[66,[2]]],35],[36,14],[24,10],[33,75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,14,[3,[2]]],[[8,[76,29]]],77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[78,4],[79,4],[80,4],[78,78],[79,79],[80,80],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],78],[[],79],[[],80],[78,37],[79,37],[80,37],[[78,78],10],[[79,79],10],[[80,80],10],[[78,12],39],[[79,12],39],[[80,12],39],[[81,1,[3,[2]]],14],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[82,[3,[2]]],83],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],4,[],[]],[[84,-1],4,85],[84,37],[[84,84],10],[[84,12],39],[-1,-1,[]],[-1,-2,[],[]],[[[16,[84]],64,86,-1,87],[[8,[4,88]]],89],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"TokenId",0],[15,"u8"],[15,"slice"],[15,"tuple"],[8,"DigestTranscript",599],[4,"Ordering",600],[3,"Choice",601],[4,"Result",602],[8,"Deserializer",603],[15,"bool"],[15,"u64"],[3,"Formatter",604],[3,"Error",604],[15,"str"],[8,"Hasher",605],[4,"Option",606],[8,"Serializer",607],[3,"String",608],[3,"TypeId",609],[3,"Engine",35],[3,"ShortAddressHash",610],[8,"Driver",35],[8,"CryptoRngCore",611],[3,"BlockVersion",35],[3,"Function",35],[4,"TransactionEntity",35],[4,"Event",35],[4,"Output",35],[4,"Error",35],[4,"RingState",35],[4,"IdentState",35],[4,"SummaryState",35],[4,"State",35],[3,"StateIter",35],[3,"TxDigest",35],[4,"FogId",35],[15,"usize"],[4,"ApduError",612],[6,"Result",604],[3,"TxSummaryAddTxIn",613],[3,"TxSummaryInit",613],[3,"TxGetResponse",614],[3,"TxSummaryAddTxOutUnblinding",613],[3,"TxInfoReq",615],[3,"WalletKeyReq",616],[3,"TxComplete",615],[3,"TxSetBlinding",614],[3,"TxMemoSign",617],[3,"SubaddressKeyReq",618],[3,"TxRingSign",614],[3,"TxSummaryAddTxOut",613],[3,"TxGetKeyImage",614],[3,"TxInit",619],[3,"RandomReq",620],[3,"KeyImageReq",621],[3,"TxSummaryBuild",613],[3,"TxSetMessage",619],[3,"TxAddTxOut",614],[3,"IdentSignReq",622],[3,"TxRingInit",614],[3,"IdentGetReq",622],[8,"RngCore",611],[8,"CryptoRng",611],[15,"u32"],[3,"Account",610],[15,"array"],[3,"BlockVersionIterator",623],[3,"TxSummaryUnblindingReport",624],[6,"RootViewPrivate",625],[6,"SubaddressSpendPrivate",625],[6,"TxOnetimeKey",619],[3,"Slip10Key",626],[4,"TxState",627],[3,"PublicSubaddress",610],[15,"u16"],[3,"String",628],[8,"RingCtAddress",610],[3,"CompressedRistretto",519],[3,"PublicAddress",519],[3,"PrintableWrapper",519],[15,"i64"],[6,"SubaddressViewPrivate",625],[3,"RistrettoSignature",629],[4,"Wrapper",581],[8,"BufMut",630],[4,"WireType",631],[3,"DecodeContext",631],[3,"DecodeError",632],[8,"Buf",633],[8,"FogCert",35],[13,"GetWalletKeys",453],[13,"GetSubaddressKeys",453],[13,"GetKeyImage",453],[13,"TxInit",453],[13,"TxSummaryAddOutputUnblinding",453],[13,"TxSummaryAddOutput",453],[13,"TxSetBlinding",453],[13,"TxSummaryInit",453],[13,"IdentSign",453],[13,"TxSummaryBuild",453],[13,"TxGetResponse",453],[13,"TxSummaryAddInput",453],[13,"TxSignMemo",453],[13,"TxRingInit",453],[13,"WalletKeys",495],[13,"SubaddressKeys",495],[13,"KeyImage",495],[13,"TxKeyImage",495],[13,"State",495],[13,"MemoHmac",495],[13,"Identity",495],[13,"TxResponse",495],[13,"RandomValue",495],[13,"Complete",517]],"b":[[15,"impl-PartialEq-for-TokenId"],[16,"impl-PartialEq%3Cu64%3E-for-TokenId"],[17,"impl-Display-for-TokenId"],[18,"impl-Debug-for-TokenId"],[19,"impl-From%3Cu64%3E-for-TokenId"],[20,"impl-From%3C%26u64%3E-for-TokenId"],[225,"impl-PartialEq-for-Output"],[226,"impl-PartialEq%3CState%3E-for-Output"],[234,"impl-Display-for-TransactionEntity"],[235,"impl-Debug-for-TransactionEntity"],[236,"impl-Debug-for-BlockVersion"],[237,"impl-Display-for-BlockVersion"],[240,"impl-Display-for-Error"],[241,"impl-Debug-for-Error"],[242,"impl-Debug-for-RingState"],[243,"impl-Display-for-RingState"],[245,"impl-Display-for-SummaryState"],[246,"impl-Debug-for-SummaryState"],[247,"impl-Debug-for-State"],[248,"impl-Display-for-State"],[249,"impl-Display-for-Digest"],[250,"impl-Debug-for-Digest"],[256,"impl-From%3CTxSummaryAddTxIn%3E-for-Event"],[257,"impl-From%3CTxSummaryInit%3E-for-Event"],[258,"impl-From%3CTxGetResponse%3E-for-Event"],[259,"impl-From%3CTxSummaryAddTxOutUnblinding%3E-for-Event"],[260,"impl-From%3CTxInfoReq%3E-for-Event"],[261,"impl-From%3CWalletKeyReq%3E-for-Event"],[262,"impl-From%3CTxComplete%3E-for-Event"],[263,"impl-From%3CTxSetBlinding%3E-for-Event"],[264,"impl-From%3CTxMemoSign%3E-for-Event"],[265,"impl-From%3CSubaddressKeyReq%3E-for-Event"],[266,"impl-From%3CTxRingSign%3E-for-Event"],[268,"impl-From%3CTxSummaryAddTxOut%3E-for-Event"],[269,"impl-From%3CTxGetKeyImage%3E-for-Event"],[270,"impl-From%3CTxInit%3E-for-Event"],[271,"impl-From%3CRandomReq%3E-for-Event"],[272,"impl-From%3CKeyImageReq%3E-for-Event"],[273,"impl-From%3CTxSummaryBuild%3E-for-Event"],[274,"impl-From%3CTxSetMessage%3C\'a%3E%3E-for-Event"],[275,"impl-From%3CTxAddTxOut%3E-for-Event"],[276,"impl-From%3CIdentSignReq%3C\'a%3E%3E-for-Event"],[277,"impl-From%3CTxRingInit%3E-for-Event"],[278,"impl-From%3CIdentGetReq%3E-for-Event"]]},\
"ledger_mob_tests":{"doc":"Tests for mobilecoin wallet integration.","t":"NNNENNNNNNNNNNNNNNNNLLLLLLLLLLLALAAALALALLLLARDLLLMLMMMLLFLLLMLFFDMLLLLMLMMMLMMLMFMLLLMLFRDLLLLLLMMFLLLLLF","n":["Apdu","DigestMismatch","Engine","Error","HidInit","InvalidKey","InvalidLength","InvalidState","Io","NoDevice","RequestTimeout","Ring","RingCt","RingSigner","Transport","UnexpectedResponse","Unknown","UserDenied","UserTimeout","Utf8","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","ident","into","key_image","memo","mlsag","source","subaddress","to_string","transaction","try_from","try_into","type_id","vzip","wallet","VECTORS","Vector","borrow","borrow_mut","from","index","into","mnemonic","path","public_key","public_key_bytes","seed","test","try_from","try_into","type_id","uri","vzip","test","hmac","RingMLSAGParameters","blinding","borrow","borrow_mut","fmt","from","generator","into","message","onetime_private_key","pseudo_output_blinding","random","real_index","ring","sign","target_subaddress_index","test","token_id","try_from","try_into","type_id","value","vzip","test","TRANSACTIONS","TransactionExpectation","account","borrow","borrow_mut","from","into","mnemonic","mnemonic","request","test","try_from","try_into","tx_req","type_id","vzip","test"],"q":[[0,"ledger_mob_tests"],[45,"ledger_mob_tests::ident"],[63,"ledger_mob_tests::key_image"],[64,"ledger_mob_tests::memo"],[65,"ledger_mob_tests::mlsag"],[88,"ledger_mob_tests::subaddress"],[89,"ledger_mob_tests::transaction"],[105,"ledger_mob_tests::wallet"],[106,"core::fmt"],[107,"core::fmt"],[108,"mc_crypto_ring_signature::ring_signature::error"],[109,"tokio::time::error"],[110,"ledger_proto::error"],[111,"mc_transaction_core::ring_ct::error"],[112,"ledger_lib::error"],[113,"std::io::error"],[114,"core::error"],[115,"core::option"],[116,"alloc::string"],[117,"core::any"],[118,"anyhow"],[119,"ledger_lib::device"],[120,"core::ops::function"],[121,"bip39::mnemonic"],[122,"core::marker"],[123,"core::fmt"],[124,"curve25519_dalek::scalar"],[125,"rand_core"],[126,"rand_core"],[127,"mc_transaction_signer::types"]],"d":["APDU error","Mismatch in rolling transaction digest","Transaction engine error","Ledger MobileCoin API Error Type","HID Init Error","Invalid key in response","Invalid length","Invalid transaction state","Ledger IO Error","No device found","Request timeout","Error signing ring","Ring CT error","Ring signer error","Ledger transport error","Unexpected APDU response","Unknown (TEMPORARY) TODO: remove once ledger_transport_tcp …","User denied operation","Timeout waiting for user","UTF8 encoding error","","","","","","","","","","Returns the argument unchanged.","","Tests and vectors for ed25519 identity operations","Calls <code>U::from(self)</code>.","Key image tests","Memo signing tests","Ring signature tests","","Subaddress key tests","","","","","","","Account key tests","","Test vector type for identity derivation and challenge …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Test identity requests","","","","","","Test key image recovery via subaddress and …","Test memo HMAC signing and verification","Copy 3 of RingMLSAGParameters… we should pull this out …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Start a transaction and sign a ring via RingMLSAGParameters…","","","","","","","Generate and fetch subaddress keys for the provided …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generate and fetch account view keys for the provided …"],"i":[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,0,0,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,0,0,0,34,34,34,34,34,34,34,34,0,34,34,34,34,34,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],[[5,[3,4]]]],[[1,2],[[5,[3,4]]]],[6,1],[7,1],[8,1],[9,1],[10,1],[-1,-1,[]],[11,1],0,[-1,-2,[],[]],0,0,0,[1,[[13,[12]]]],0,[-1,14,[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[16,[[18,[17]]]],[16,[[18,[17]]]],[[-1,-2,16],[[19,[3]]],20,21],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],0,[-1,-2,[],[]],[[-1,22],[[19,[3]]],[20,23]],[[-1,22,24],[[19,[3]]],20],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[25,2],26],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[[27,24,28,-1],25,[29,30]],0,0,[[25,-1,31],[[5,[32,1]]],[29,30]],0,[[-1,-2,22,24],[[19,[3]]],20,21],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,15,[]],0,[-1,-2,[],[]],[[-1,-2,22,33],[[19,[3]]],[20,23],21],0,0,[34,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[34,22],0,0,[[-1,-2,34],[[19,[3]]],[20,23],21],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[34,35],[-1,15,[]],[-1,-2,[],[]],[[-1,-2,22],[[19,[3]]],[20,23],21]],"c":[],"p":[[4,"Error",0],[3,"Formatter",106],[15,"tuple"],[3,"Error",106],[4,"Result",107],[4,"Error",108],[3,"Elapsed",109],[4,"ApduError",110],[4,"Error",111],[4,"Error",112],[3,"Error",113],[8,"Error",114],[4,"Option",115],[3,"String",116],[3,"TypeId",117],[3,"Vector",45],[15,"u8"],[15,"array"],[6,"Result",118],[8,"Device",119],[8,"Fn",120],[3,"Mnemonic",121],[8,"Send",122],[15,"usize"],[3,"RingMLSAGParameters",65],[6,"Result",106],[3,"Account",123],[3,"Scalar",124],[8,"RngCore",125],[8,"CryptoRng",125],[15,"bool"],[3,"RingMLSAG",126],[15,"u64"],[3,"TransactionExpectation",89],[3,"TxSignReq",127]],"b":[[22,"impl-Display-for-Error"],[23,"impl-Debug-for-Error"],[24,"impl-From%3CError%3E-for-Error"],[25,"impl-From%3CElapsed%3E-for-Error"],[26,"impl-From%3CApduError%3E-for-Error"],[27,"impl-From%3CError%3E-for-Error"],[28,"impl-From%3CError%3E-for-Error"],[30,"impl-From%3CError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
